// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  articles  Article[]
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  body        String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      User?    @relation(fields: [authorId], references: [id])
  authorId    Int?
}

model Product {
  id          String           @id @default(uuid())
  title       String           @unique
  price       Float            @default(0)
  description String?          @default("")
  slug        String           @unique
  stock       Int              @default(0)
  sizes       String[]
  gender      String
  tags        String[]         @default([])
  images      Product_image[]  // Relación uno a muchos con Product_image

  @@index([slug]) // Index para facilitar búsquedas por slug
}

model Product_image {
  id        Int      @id @default(autoincrement())
  url       String
  productId String
  product   Product   @relation(fields: [productId], references: [id], onDelete: Cascade) // Relación con Product
}
